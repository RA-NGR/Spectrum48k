' ----------------------------------------------------------------
' NIRVANA+ ENGINE DEMO - Boriel's ZX BASIC Compiler
'
' This program can be compiled as follows:
'
' zxb.exe nirvanadem.bas -t -O3
'
' After compiling it, use the following loader to execute:
'
' 10 CLEAR VAL "32767"
' 20 LOAD "NIRVANA+"CODE
' 30 LOAD ""CODE
' 40 RANDOMIZE USR VAL "32768"
' ----------------------------------------------------------------
#include "nirvana+.bas"

    ' Simple image map for word "NIRVANA+"
    DIM pos(0 TO 191) AS UBYTE => { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
                                    0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, \
                                    0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, \
                                    0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, \
                                    0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, \
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
                                    0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, \
                                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, \
                                    0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, \
                                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, \
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
    DIM dlin(0 TO 7) AS BYTE
    DIM dcol(0 TO 7) AS BYTE
    DIM lin AS UBYTE
    DIM col AS UBYTE
    DIM tile AS UBYTE
    DIM sprite AS UBYTE
    DIM counter AS UBYTE
    DIM addr AS UINTEGER

    ' Initialize screen
    INK 1: PAPER 1: BORDER 0: BRIGHT 0: FLASH 0: CLS
    PRINT INK 7;AT 0,0;"NIRVANA+ ENGINE   \* Einar Saukas"
    RANDOMIZE

    ' Set btiles address
    NIRVANAtiles(@btiles)

    ' Activate NIRVANA ENGINE
    NIRVANAstart()

    DO

        ' Draw or erase tiles on screen until key is pressed
        DO
            LET lin = ((INT(RND*12))<<4)+16                 ' random values 16,32,..,192
            LET col = ((INT(RND*16))<<1)                    ' random values 0,2,4,..,30
            IF pos((lin-16)+(col>>1)) > 0 THEN
                NIRVANAhalt()
                NIRVANAdrawT(16, lin, col)
            ELSEIF RND < .5 THEN
                LET tile = INT(RND*16)
                NIRVANAhalt()
                NIRVANAdrawT(tile, lin, col)
            ELSE
                NIRVANAhalt()
                NIRVANAfillT(0, lin, col)
            END IF
        LOOP UNTIL INKEY$<>""

        ' Wait until key is released
        WHILE INKEY$<>""
        END WHILE

        ' Erase all tiles
        FOR lin = 16 TO 192 STEP 16
            NIRVANAhalt()
            FOR col = 0 TO 30 STEP 2
                NIRVANAfillT(0, lin, col)
            NEXT col
        NEXT lin

        ' Initialize sprites randomly
        FOR sprite = 0 TO 7
            LET lin = ((INT(RND*99))<<1)+2                  ' random values 2,4,..,198
            LET col = INT(RND*29)+1                         ' random values 1,2,..,29
            LET dlin(sprite) = ((INT(RND*2))<<2)-2          ' random values -2,2
            LET dcol(sprite) = INT(RND*3)-1                 ' random values -1,0,1
            NIRVANAhalt()
            NIRVANAspriteT(sprite, sprite<<1, lin, col)
        NEXT sprite

        ' Move sprites on screen until key is pressed
        DO
            LET counter = counter+1
            FOR sprite = 0 TO 7
                LET lin = PEEK SPRITELIN(sprite)
                LET col = PEEK SPRITECOL(sprite)
                LET tile = PEEK SPRITEVAL(sprite)
                IF (sprite mod 3)=0 THEN
                    NIRVANAhalt()
                END IF
                NIRVANAfillT(0, lin, col)
                LET lin = lin+dlin(sprite)
                LET col = col+dcol(sprite)
                IF (counter & 7) = sprite THEN
                    LET tile = tile bXOR 1
                END IF
                NIRVANAspriteT(sprite, tile, lin, col)
                IF lin=0 OR lin=200 THEN
                    LET dlin(sprite) = -dlin(sprite)
                END IF
                IF col=0 OR col=30 THEN
                    LET dcol(sprite) = -dcol(sprite)
                END IF
            NEXT sprite
        LOOP UNTIL INKEY$<>""

        ' Wait until key is released
        WHILE INKEY$<>""
        END WHILE

        ' Erase and hide sprites (moving each sprite to line zero)
        NIRVANAhalt()
        FOR sprite = 0 TO 7
            LET lin = PEEK SPRITELIN(sprite)
            LET col = PEEK SPRITECOL(sprite)
            POKE SPRITELIN(sprite), 0
            NIRVANAfillT(0, lin, col)
        NEXT sprite

    LOOP

btiles:
    asm
        incbin "nirvana+.btile"
    end asm
